{"version":3,"file":"static/js/2229.6ad1402f.chunk.js","mappings":"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","sources":["views/employee/Employeeform.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { addEmplloyee, updateEmplloyee } from 'src/redux/api/api'\n\nconst Employeeform = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm()\n  const { state } = useLocation()\n  const [isUpdate, setIsUpdate] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [image, setImage] = useState('')\n  const navigate = useNavigate()\n\n  const handleFileChange = (e) => {\n    const files = e.target.files[0]\n    if (files) {\n      const imageUrl = URL.createObjectURL(files)\n      setImage(imageUrl)\n    } else {\n      setImage(null)\n    }\n  }\n\n  const onSubmit = (data) => {\n    setIsLoading(true)\n    let formData = new FormData()\n    Object.keys(data).forEach(function (key) {\n      if (key === 'image') {\n        if (data[key][0] !== undefined) {\n          formData.append(key, data[key][0])\n        }\n      } else {\n        formData.append(key, data[key])\n      }\n    })\n    isUpdate === ''\n      ? addEmplloyee(formData)\n          .then((res) => {\n            setIsLoading(false)\n            if (res.status === 200) {\n              navigate('/employee')\n            }\n          })\n          .catch((error) => {\n            console.log(error)\n            setIsLoading(false)\n            const errorMsg = error.response?.data?.message || 'Something went wrong'\n            toast.error(errorMsg)\n          })\n      : updateEmplloyee(isUpdate, formData)\n          .then((res) => {\n            setIsLoading(false)\n            if (res.status === 200) {\n              navigate('/employee')\n            }\n          })\n          .catch((error) => {\n            setIsLoading(false)\n            console.log(error)\n            const errorMsg = error.response?.data?.message || 'Something went wrong'\n            toast.error(errorMsg)\n          })\n  }\n\n  useEffect(() => {\n    if (state?.editData) {\n      setIsUpdate(state.editData._id)\n      setImage(state.imageUrl + state.editData.image)\n      setValue('name', state.editData.name)\n      setValue('email', state.editData.email)\n      setValue('user_id', state.editData.user_id)\n      setValue('position', state.editData.position)\n      setValue('phoneno', state.editData.phoneno)\n    }\n  }, [state, setValue])\n\n  const password = watch('password')\n\n  return (\n    <div className=\"bg-light min-vh-100\">\n      <ToastContainer />\n      <CContainer className=\"mt-3\">\n        <CRow>\n          <CCol md={8}>\n            <CCard>\n              <CCardHeader>{isUpdate ? 'Update' : 'Add'} Form</CCardHeader>\n              <CCardBody>\n                <CForm className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Name</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      {...register('name', { required: 'Name is required' })}\n                      invalid={!!errors.name}\n                    />\n                    <CFormFeedback invalid>{errors.name?.message}</CFormFeedback>\n                  </CCol>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Email</CFormLabel>\n                    <CFormInput\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      {...register('email', { required: 'Email is required' })}\n                      invalid={!!errors.email}\n                    />\n                    <CFormFeedback invalid>{errors.email?.message}</CFormFeedback>\n                  </CCol>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Password</CFormLabel>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      {...register('password', {\n                        required: isUpdate === '' ? 'Password is required' : false,\n                      })}\n                      invalid={!!errors.password}\n                    />\n                    {errors.password && (\n                      <CFormFeedback invalid>{errors.password.message}</CFormFeedback>\n                    )}\n                  </CCol>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Confirm Password</CFormLabel>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      {...register('confpassword', {\n                        validate: (value) => {\n                          if (password) {\n                            return value === password || 'Passwords do not match'\n                          }\n                        },\n                      })}\n                      invalid={!!errors.confpassword}\n                    />\n                    {errors.confpassword && (\n                      <CFormFeedback invalid>{errors.confpassword.message}</CFormFeedback>\n                    )}\n                  </CCol>\n                  <CCol xl={4} md={12}>\n                    <CFormLabel>User ID</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      placeholder=\"User ID\"\n                      {...register('user_id', { required: 'User ID is required' })}\n                      invalid={!!errors.user_id}\n                    />\n                    <CFormFeedback invalid>{errors.user_id?.message}</CFormFeedback>\n                  </CCol>\n                  <CCol xl={4} md={12}>\n                    <CFormLabel>Position</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      placeholder=\"Position\"\n                      {...register('position', { required: 'Position is required' })}\n                      invalid={!!errors.position}\n                    />\n                    <CFormFeedback invalid>{errors.position?.message}</CFormFeedback>\n                  </CCol>\n                  <CCol xl={4} md={12}>\n                    <CFormLabel>Phone No</CFormLabel>\n                    <CFormInput\n                      type=\"tel\"\n                      placeholder=\"Phone No\"\n                      {...register('phoneno', { required: 'Phone No is required' })}\n                      invalid={!!errors.phoneno}\n                    />\n                    <CFormFeedback invalid>{errors.phoneno?.message}</CFormFeedback>\n                  </CCol>\n                  <CCol xl={4} md={12}>\n                    <CFormLabel>Image</CFormLabel>\n                    <CFormInput\n                      type=\"file\"\n                      {...register('image', {\n                        required: isUpdate === '' ? 'Image is required' : false,\n                      })}\n                      accept=\"image/*\"\n                      name=\"image\"\n                      onChange={handleFileChange}\n                    />\n                    {errors.image && <CFormFeedback invalid>{errors.image.message}</CFormFeedback>}\n                  </CCol>\n                  <CCol md={5}>\n                    {image && (\n                      <>\n                        <p>Image Preview</p>\n                        <div className=\"mb-4 text-center\">\n                          <img\n                            src={image}\n                            alt=\"Profile Preview\"\n                            style={{\n                              width: '150px',\n                              height: '150px',\n                              objectFit: 'cover',\n                              borderRadius: '50%',\n                            }}\n                          />\n                        </div>\n                      </>\n                    )}\n                  </CCol>\n                  <CCol md={12} className=\"text-center submitButton\">\n                    {isLoading ? (\n                      <CButton disabled>\n                        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                        Loading...\n                      </CButton>\n                    ) : (\n                      <CButton type=\"submit\" className=\"AddButton\">\n                        {isUpdate === '' ? 'Add' : 'Update'}\n                      </CButton>\n                    )}\n                  </CCol>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Employeeform\n"],"names":["Employeeform","_errors$name","_errors$email","_errors$user_id","_errors$position","_errors$phoneno","register","handleSubmit","formState","errors","setValue","watch","useForm","state","useLocation","isUpdate","setIsUpdate","useState","isLoading","setIsLoading","image","setImage","navigate","useNavigate","useEffect","editData","_id","imageUrl","name","email","user_id","position","phoneno","password","_jsxs","className","children","_jsx","ToastContainer","CContainer","CRow","CCol","md","CCard","CCardHeader","CCardBody","CForm","onSubmit","data","formData","FormData","Object","keys","forEach","key","undefined","append","addEmplloyee","then","res","status","catch","error","_error$response","_error$response$data","console","log","errorMsg","response","message","toast","updateEmplloyee","_error$response2","_error$response2$data","xl","CFormLabel","CFormInput","type","placeholder","required","invalid","CFormFeedback","validate","value","confpassword","accept","onChange","e","files","target","URL","createObjectURL","_Fragment","src","alt","style","width","height","objectFit","borderRadius","CButton","disabled","CSpinner","component","size"],"sourceRoot":""}