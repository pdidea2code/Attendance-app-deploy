{"version":3,"file":"static/js/2791.86689a5f.chunk.js","mappings":"+TAYA,MA8MA,EA9MmBA,KACjB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAErCG,IADWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACXC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,QACnCG,EAAYC,IAAkBV,EAAAA,EAAAA,UAAS,KAExC,SACJW,EAAQ,aACRC,EACAC,WAAW,OAAEC,GAAQ,SACrBC,EAAQ,MACRC,IACEC,EAAAA,EAAAA,MAEEC,EAAgBC,UACpB,IACEjB,GAAa,GACb,MACMkB,SADYC,EAAAA,EAAAA,IAAcC,IACfF,KAAKG,KAEtB,GAAIC,MAAMC,QAAQL,GAAO,CACvB,MAAMM,QAAsBN,EAAKO,KAAKC,IAAI,IACrCA,EACHC,eAAgBD,EAAKE,UAAWC,EAAAA,EAAAA,IAAcH,EAAKE,UAAY,IAC/DE,kBAAmBJ,EAAKK,aAAcF,EAAAA,EAAAA,IAAcH,EAAKK,aAAe,IAExEC,WAAWC,EAAAA,EAAAA,IAAOP,EAAKQ,IAAK,cAE5BC,cAAeT,EAAKU,SAAUH,EAAAA,EAAAA,IAAOP,EAAKU,QAAS,WAAa,IAEhEC,eAAgBX,EAAKY,UAAWL,EAAAA,EAAAA,IAAOP,EAAKY,SAAU,WAAa,IACnEC,KAAMb,EAAKc,QAAQD,KACnBE,cAAef,EAAKc,QAAQE,IAC5BC,OAAQC,WAAWlB,EAAKiB,QAAQE,QAAQ,OAI1ChD,EAAiB2B,EACnB,CACAxB,GAAa,EACf,CAAE,MAAO8C,GAAQ,IAADC,EAAAC,EACdC,QAAQC,IAAIJ,GACZ9C,GAAa,GACbmD,EAAAA,GAAML,OAAoB,QAAdC,EAAAD,EAAMM,gBAAQ,IAAAL,GAAM,QAANC,EAAdD,EAAgB7B,YAAI,IAAA8B,OAAN,EAAdA,EAAsBK,UAAW,oBAC/C,IAaFC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAAQtD,GACRO,EAAeJ,EAAKG,YAAc,GAAG,GACpC,KAEH+C,EAAAA,EAAAA,YAAU,KACRtC,GAAe,GACd,IAEH,MAAMwC,EAAU,CACd,CACEjB,KAAM,OACNkB,MAAO,OACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACErB,KAAM,YACNkB,MAAO,MACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACErB,KAAM,gBACNkB,MAAO,UACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACErB,KAAM,MACNkB,MAAO,mBACPC,QAAS,CACPG,iBAAmBC,IACjB,MAAMC,EAAWnE,EAAcoE,MAAM9C,GAASA,EAAKwB,MAAQoB,IAC3D,MAAM,GAANG,OAAUF,EAASG,gBAAe,KAAAD,OAAIF,EAASI,iBAAgB,IAIrE,CACE5B,KAAM,iBACNkB,MAAO,WACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACErB,KAAM,MACNkB,MAAO,oBACPC,QAAS,CACPG,iBAAmBC,IACjB,MAAMC,EAAWnE,EAAcoE,MAAM9C,GAASA,EAAKwB,MAAQoB,IAC3D,MAAM,GAANG,OAAUF,EAASK,iBAAgB,KAAAH,OAAIF,EAASM,kBAAiB,IAIvE,CACE9B,KAAM,WACNkB,MAAO,WACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACErB,KAAM,oBACNkB,MAAO,cACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACErB,KAAM,iBACNkB,MAAO,WACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACErB,KAAM,SACNkB,MAAO,SACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,KAOZ,OACEU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGzE,GACCuE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BD,UAC5CF,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,CAACD,UAAU,2BAGtBE,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACM,EAAAA,GAAc,KAcfN,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACJ,UAAU,OAAMD,UACpBF,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,EAAER,UAClBG,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAACR,UAAU,UAAUS,SAAUxE,GApI/BQ,IAChB,MAAMG,EAAOH,EAAKE,KAAK+D,MAAM,KACvB/D,EAAO,CACXgE,KAAM/D,EAAK,GACXgE,MAAOhE,EAAK,GACZD,KAAMC,EAAK,IAEbL,EAAcI,EAAK,IA6HmDoD,SAAA,EAC1DF,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,EAAER,UAClBF,EAAAA,EAAAA,KAACgB,EAAAA,GAAU,CACTC,KAAK,UACD9E,EAAS,OAAQ,CAAE+E,SAAU,2BAGrClB,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,EAAER,UAClBF,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACF,KAAK,SAAQf,SAAC,kBAK/BF,EAAAA,EAAAA,KAACoB,EAAAA,GAAY,CACXC,MAAO,aACPzE,KAAMtB,EACN4D,QAASA,EACTE,QA3CM,CAAEkC,eAAgB,OAAQC,cAAc,SA+CnD,C","sources":["views/Attendance/Attendance.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { deleteAttendance, getAttendance, getrole, minutesToHHMM } from 'src/redux/api/api'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { CButton, CCol, CForm, CFormInput, CFormLabel, CRow, CSpinner } from '@coreui/react'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport MUIDataTable from 'mui-datatables'\nimport { format } from 'date-fns'\nimport { useForm } from 'react-hook-form'\n\nconst Attendance = () => {\n  const [dataTableData, setDataTabledata] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const auth = useSelector((state) => state.auth)\n  const [attendance, setAttendances] = useState([])\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm()\n\n  const getattendance = async (date) => {\n    try {\n      setIsLoading(true)\n      const res = await getAttendance(date)\n      const data = res.data.info\n\n      if (Array.isArray(data)) {\n        const formattedData = await data.map((item) => ({\n          ...item,\n          modifyovertime: item.overtime ? minutesToHHMM(item.overtime) : '-',\n          modifyworkingtime: item.workingtime ? minutesToHHMM(item.workingtime) : '-',\n\n          modifyday: format(item.day, 'dd/MM/yyyy'),\n\n          modifycheckin: item.checkin ? format(item.checkin, 'hh:mm a') : '-',\n\n          modifycheckout: item.checkout ? format(item.checkout, 'hh:mm a') : '-',\n          name: item.user_id.name,\n          modifyuser_id: item.user_id._id,\n          radius: parseFloat(item.radius).toFixed(2),\n          //\n        }))\n\n        setDataTabledata(formattedData)\n      }\n      setIsLoading(false)\n    } catch (error) {\n      console.log(error)\n      setIsLoading(false)\n      toast.error(error.response?.data?.message || 'An error occurred')\n    }\n  }\n\n  const onSubmit = (data) => {\n    const info = data.date.split('-')\n    const date = {\n      year: info[0],\n      month: info[1],\n      date: info[2],\n    }\n    getattendance(date)\n  }\n\n  useEffect(() => {\n    getrole(dispatch)\n    setAttendances(auth.attendance || [])\n  }, [])\n\n  useEffect(() => {\n    getattendance()\n  }, [])\n\n  const columns = [\n    {\n      name: 'name',\n      label: 'Name',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyday',\n      label: 'day',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifycheckin',\n      label: 'checkin',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: '_id',\n      label: 'checkin Lat,Long',\n      options: {\n        customBodyRender: (value) => {\n          const editData = dataTableData.find((data) => data._id === value)\n          return `${editData.checkinLatitude},${editData.checkinLongitude}`\n        },\n      },\n    },\n    {\n      name: 'modifycheckout',\n      label: 'checkout',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: '_id',\n      label: 'checkout Lat,Long',\n      options: {\n        customBodyRender: (value) => {\n          const editData = dataTableData.find((data) => data._id === value)\n          return `${editData.checkoutLatitude},${editData.checkoutLongitude}`\n        },\n      },\n    },\n    {\n      name: 'location',\n      label: 'location',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyworkingtime',\n      label: 'workingtime',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyovertime',\n      label: 'overtime',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'radius',\n      label: 'radius',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n  ]\n\n  const options = { selectableRows: 'none', onRowsDelete: false }\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"d-flex justify-content-center\">\n          <CSpinner className=\"theme-spinner-color\" />\n        </div>\n      ) : (\n        <>\n          <ToastContainer />\n          {/* \n          {Array.isArray(attendance) && attendance.includes('attendance.add') && (\n            <div className=\"right-text\">\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                className=\"AddButton\"\n                onClick={() => navigate('/attendanceform')}\n              >\n                Add\n              </Button>\n            </div>\n          )} */}\n          <CRow className=\"mb-3\">\n            <CCol md={12} xl={4}>\n              <CForm className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n                <CCol md={12} xl={6}>\n                  <CFormInput\n                    type=\"date\"\n                    {...register('date', { required: 'date ise required' })}\n                  />\n                </CCol>\n                <CCol md={12} xl={4}>\n                  <CButton type=\"submit\">Get</CButton>\n                </CCol>\n              </CForm>\n            </CCol>\n          </CRow>\n          <MUIDataTable\n            title={'Attendance'}\n            data={dataTableData}\n            columns={columns}\n            options={options}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Attendance\n"],"names":["Attendance","dataTableData","setDataTabledata","useState","isLoading","setIsLoading","dispatch","useNavigate","useDispatch","auth","useSelector","state","attendance","setAttendances","register","handleSubmit","formState","errors","setValue","watch","useForm","getattendance","async","data","getAttendance","date","info","Array","isArray","formattedData","map","item","modifyovertime","overtime","minutesToHHMM","modifyworkingtime","workingtime","modifyday","format","day","modifycheckin","checkin","modifycheckout","checkout","name","user_id","modifyuser_id","_id","radius","parseFloat","toFixed","error","_error$response","_error$response$data","console","log","toast","response","message","useEffect","getrole","columns","label","options","filter","sort","customBodyRender","value","editData","find","concat","checkinLatitude","checkinLongitude","checkoutLatitude","checkoutLongitude","_jsx","_Fragment","children","className","CSpinner","_jsxs","ToastContainer","CRow","CCol","md","xl","CForm","onSubmit","split","year","month","CFormInput","type","required","CButton","MUIDataTable","title","selectableRows","onRowsDelete"],"sourceRoot":""}