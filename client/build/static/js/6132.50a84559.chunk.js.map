{"version":3,"file":"static/js/6132.50a84559.chunk.js","mappings":"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","sources":["views/Announcement/Announcementfrom.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { addAnnouncement, updateAnnouncement } from 'src/redux/api/api'\n\nconst Announcementform = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    getValues,\n  } = useForm()\n  const { state } = useLocation()\n  const [isUpdate, setIsUpdate] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [image, setImage] = useState('')\n  const navigate = useNavigate()\n\n  const handleFileChange = (e) => {\n    const files = e.target.files[0]\n    if (files) {\n      const imageUrl = URL.createObjectURL(files)\n      setImage(imageUrl)\n    } else {\n      setImage(null)\n    }\n  }\n\n  const formatDateToYMD = (date) => {\n    if (!date) return ''\n    const parts = date.split('/')\n\n    if (parts.length === 3) {\n      const [day, month, year] = parts\n      return `${year}-${month}-${day}`\n    }\n    return ''\n  }\n  const formatDateToDMY = (date) => {\n    if (!date) return ''\n    const parts = date.split('-')\n    if (parts.length === 3) {\n      const [year, month, day] = parts\n      return `${day}/${month}/${year}`\n    }\n    return ''\n  }\n\n  const onSubmit = (data) => {\n    setIsLoading(true)\n    const formattedDate = formatDateToDMY(data.date)\n    data.date = formattedDate\n\n    let formData = new FormData()\n    Object.keys(data).forEach(function (key) {\n      if (key === 'image') {\n        if (data[key][0] !== undefined) {\n          formData.append(key, data[key][0])\n        }\n      } else {\n        formData.append(key, data[key])\n      }\n    })\n    if (isUpdate !== '') {\n      formData.append('id', isUpdate)\n    }\n    isUpdate === ''\n      ? addAnnouncement(formData)\n          .then((res) => {\n            setIsLoading(false)\n            if (res.status === 200) {\n              navigate('/announcement')\n            }\n          })\n          .catch((error) => {\n            console.log(error)\n            setIsLoading(false)\n            const errorMsg = error.response?.data?.message || 'Something went wrong'\n            toast.error(errorMsg)\n          })\n      : updateAnnouncement(formData)\n          .then((res) => {\n            setIsLoading(false)\n            if (res.status === 200) {\n              navigate('/announcement')\n            }\n          })\n          .catch((error) => {\n            setIsLoading(false)\n            console.log(error)\n            const errorMsg = error.response?.data?.message || 'Something went wrong'\n            toast.error(errorMsg)\n          })\n  }\n\n  useEffect(() => {\n    if (state?.editData) {\n      setIsUpdate(state.editData._id)\n      state.editData.image && setImage(state.imageUrl + state.editData.image)\n      setValue('title', state.editData.title)\n      setValue('description', state.editData.description)\n      setValue('date', formatDateToYMD(state.editData.date))\n    }\n  }, [state, setValue])\n\n  return (\n    <div className=\"bg-light min-vh-100\">\n      <ToastContainer />\n      <CContainer className=\"mt-3\">\n        <CRow>\n          <CCol md={8}>\n            <CCard>\n              <CCardHeader>{isUpdate ? 'Update' : 'Add'} Form</CCardHeader>\n              <CCardBody>\n                <CForm className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Title</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      {...register('title', { required: 'Title is required' })}\n                      invalid={!!errors.title}\n                    />\n                    <CFormFeedback invalid>{errors.title?.message}</CFormFeedback>\n                  </CCol>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Description</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      {...register('description', { required: 'Description is required' })}\n                      invalid={!!errors.description}\n                    />\n                    <CFormFeedback invalid>{errors.description?.message}</CFormFeedback>\n                  </CCol>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Date</CFormLabel>\n                    <CFormInput\n                      type=\"date\"\n                      {...register('date', { required: 'Date is required' })}\n                      invalid={!!errors.date}\n                      value={getValues('data')}\n                    />\n                    <CFormFeedback invalid>{errors.date?.message}</CFormFeedback>\n                  </CCol>\n                  <CCol xl={4} md={12}>\n                    <CFormLabel>Image</CFormLabel>\n                    <CFormInput\n                      type=\"file\"\n                      {...register('image')}\n                      accept=\"image/*\"\n                      name=\"image\"\n                      onChange={handleFileChange}\n                    />\n                  </CCol>\n                  <CCol md={5}>\n                    {image && (\n                      <>\n                        <p>Image Preview</p>\n                        <div className=\"mb-4 text-center\">\n                          <img\n                            src={image}\n                            alt=\"Profile Preview\"\n                            style={{\n                              width: '150px',\n                              height: '150px',\n                              objectFit: 'cover',\n                              borderRadius: '5px',\n                            }}\n                          />\n                        </div>\n                      </>\n                    )}\n                  </CCol>\n                  <CCol md={12} className=\"text-center submitButton\">\n                    {isLoading ? (\n                      <CButton disabled>\n                        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                        Loading...\n                      </CButton>\n                    ) : (\n                      <CButton type=\"submit\" className=\"AddButton\">\n                        {isUpdate === '' ? 'Add' : 'Update'}\n                      </CButton>\n                    )}\n                  </CCol>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Announcementform\n"],"names":["Announcementform","_errors$title","_errors$description","_errors$date","register","handleSubmit","formState","errors","setValue","getValues","useForm","state","useLocation","isUpdate","setIsUpdate","useState","isLoading","setIsLoading","image","setImage","navigate","useNavigate","useEffect","editData","_id","imageUrl","title","description","date","parts","split","length","day","month","year","concat","formatDateToYMD","_jsxs","className","children","_jsx","ToastContainer","CContainer","CRow","CCol","md","CCard","CCardHeader","CCardBody","CForm","onSubmit","data","formattedDate","formatDateToDMY","formData","FormData","Object","keys","forEach","key","undefined","append","addAnnouncement","then","res","status","catch","error","_error$response","_error$response$data","console","log","errorMsg","response","message","toast","updateAnnouncement","_error$response2","_error$response2$data","xl","CFormLabel","CFormInput","type","placeholder","required","invalid","CFormFeedback","value","accept","name","onChange","e","files","target","URL","createObjectURL","_Fragment","src","alt","style","width","height","objectFit","borderRadius","CButton","disabled","CSpinner","component","size"],"sourceRoot":""}