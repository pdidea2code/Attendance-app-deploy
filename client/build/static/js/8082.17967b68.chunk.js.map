{"version":3,"file":"static/js/8082.17967b68.chunk.js","mappings":"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","sources":["views/Leave/Leave.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport {\n  changeStatus,\n  convertToDDMMYYYY,\n  getallLeave,\n  getrole,\n  getUserLeave,\n} from 'src/redux/api/api'\nimport * as Icons from '@mui/icons-material'\nimport swal from 'sweetalert'\nimport { CButton, CSpinner } from '@coreui/react'\nimport { Button } from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MUIDataTable from 'mui-datatables'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport changeState from 'src/redux/reducer/changeState'\n\nconst Leave = () => {\n  const [dataTableData, setDataTabledata] = useState([])\n  const [baseUrl, setBaseUrl] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const auth = useSelector((state) => state.auth)\n  const [permission, setPermissions] = useState([])\n\n  const leave = async () => {\n    // setIsLoading(true)\n    try {\n      const res = await getallLeave()\n      const data = res.data.info\n      if (Array.isArray(data)) {\n        const formattedData = await data.map((item) => ({\n          ...item,\n          modifydate: convertToDDMMYYYY(item.date),\n          modifytodate: item.todate ? convertToDDMMYYYY(item.todate) : '-',\n          modifyhour: item.hour ? `${item.hour} Hour ` : '-',\n          modifyapprovebyname: item.approvebyname ? item.approvebyname : '-',\n          modiftuser_id: item.user_id.user_id ? item.user_id.user_id : '-',\n          username: item.user_id.name ? item.user_id.name : '-',\n        }))\n        // console.log(formattedData)\n        setDataTabledata(formattedData)\n      }\n    } catch (error) {\n      console.log(error)\n      toast.error(error.response?.data?.message || 'An error occurred')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const changestatus = async (data, status) => {\n    try {\n      const req = {\n        id: data._id,\n        status: status,\n      }\n      const res = await changeStatus(req)\n      // console.log(res)\n    } catch (error) {\n      console.log(error)\n      toast.error(error.response?.data?.message || 'An error occurred')\n    } finally {\n      leave()\n    }\n  }\n\n  useEffect(() => {\n    const fetchPermissions = async () => {\n      await getrole(dispatch)\n      setPermissions(auth.permission)\n    }\n    fetchPermissions()\n  }, [])\n\n  useEffect(() => {\n    leave()\n  }, [])\n\n  const columns = [\n    {\n      name: 'modiftuser_id',\n      label: 'user_id',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'username',\n      label: 'name',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifydate',\n      label: 'date',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifytodate',\n      label: 'todate',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyhour',\n      label: 'hour',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n\n    {\n      name: 'type',\n      label: 'type',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'levaetype',\n      label: 'levaetype',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'day',\n      label: 'day',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n\n    {\n      name: 'reson',\n      label: 'reson',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyapprovebyname',\n      label: 'approveby',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'status',\n      label: 'status',\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (status) => {\n          if (status === 'Pending') {\n            return (\n              <p\n                style={{\n                  background: '#ffc800',\n                  color: 'black',\n                  borderRadius: '20px',\n                  textAlign: 'center',\n                  padding: '4px',\n                }}\n              >\n                {status}\n              </p>\n            )\n          } else if (status === 'Rejected') {\n            return (\n              <p\n                style={{\n                  background: 'red',\n                  color: 'black',\n                  borderRadius: '20px',\n                  textAlign: 'center',\n                  padding: '4px',\n                }}\n              >\n                {status}\n              </p>\n            )\n          } else if (status === 'Approved') {\n            return (\n              <p\n                style={{\n                  background: '#00ff00',\n                  color: 'black',\n                  borderRadius: '20px',\n                  textAlign: 'center',\n                  padding: '4px',\n                }}\n              >\n                {status}\n              </p>\n            )\n          }\n          return null // return null for any other status\n        },\n      },\n    },\n  ]\n\n  if (Array.isArray(permission) && permission.includes('leave.edit')) {\n    columns.push({\n      name: '_id',\n      label: 'Action',\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          const editData = dataTableData.find((data) => data._id === value)\n\n          if (editData.status === 'Approved') {\n            return (\n              <>\n                <CButton\n                  className=\"me-1 mb-1\"\n                  style={{ padding: '5px', background: 'red', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Rejected')\n                  }}\n                >\n                  Reject\n                </CButton>\n                <CButton\n                  style={{ padding: '5px', background: '#ffc800', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Pending')\n                  }}\n                >\n                  Pending\n                </CButton>\n              </>\n            )\n          } else if (editData.status === 'Rejected') {\n            return (\n              <>\n                <CButton\n                  className=\"me-1 mb-1\"\n                  style={{ padding: '5px', background: '#00ff00', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Approved')\n                  }}\n                >\n                  Approv\n                </CButton>\n                <CButton\n                  style={{ padding: '5px', background: '#ffc800', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Pending')\n                  }}\n                >\n                  Pending\n                </CButton>\n              </>\n            )\n          } else if (editData.status === 'Pending') {\n            return (\n              <>\n                <CButton\n                  className=\"me-1 mb-1\"\n                  style={{ padding: '5px', background: '#00ff00', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Approved')\n                  }}\n                >\n                  Approv\n                </CButton>\n                <CButton\n                  style={{ padding: '5px', background: 'red', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Rejected')\n                  }}\n                >\n                  Reject\n                </CButton>\n              </>\n            )\n          }\n        },\n      },\n    })\n  }\n  const options = {}\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"d-flex justify-content-center\">\n          <CSpinner className=\"theme-spinner-color\" />\n        </div>\n      ) : (\n        <>\n          <ToastContainer />\n          {/* {Array.isArray(permission) && permission.includes('leave.add') && (\n            <div className=\"right-text\">\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                className=\"AddButton\"\n                onClick={() => navigate('/employeeform')}\n              >\n                Add\n              </Button>\n            </div>\n          )} */}\n          <MUIDataTable\n            title={'Leave'}\n            data={dataTableData}\n            columns={columns}\n            options={options}\n            id=\"leave\"\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Leave\n"],"names":["Leave","dataTableData","setDataTabledata","useState","baseUrl","setBaseUrl","isLoading","setIsLoading","dispatch","useNavigate","useDispatch","auth","useSelector","state","permission","setPermissions","leave","async","data","getallLeave","info","Array","isArray","formattedData","map","item","modifydate","convertToDDMMYYYY","date","modifytodate","todate","modifyhour","hour","concat","modifyapprovebyname","approvebyname","modiftuser_id","user_id","username","name","error","_error$response","_error$response$data","console","log","toast","response","message","changestatus","status","req","id","_id","changeStatus","_error$response2","_error$response2$data","useEffect","getrole","fetchPermissions","columns","label","options","filter","sort","customBodyRender","_jsx","style","background","color","borderRadius","textAlign","padding","children","includes","push","value","editData","find","_jsxs","_Fragment","CButton","className","onClick","CSpinner","ToastContainer","MUIDataTable","title"],"sourceRoot":""}