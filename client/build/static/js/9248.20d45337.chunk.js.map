{"version":3,"file":"static/js/9248.20d45337.chunk.js","mappings":"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","sources":["views/Event/Eventform.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { addEvent, updateEvent } from 'src/redux/api/api'\n\nconst Eventform = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    getValues,\n  } = useForm()\n  const { state } = useLocation()\n  const [isUpdate, setIsUpdate] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onSubmit = (data) => {\n    if (isUpdate !== '') {\n      data.id = isUpdate\n    }\n    isUpdate === ''\n      ? addEvent(data)\n          .then((res) => {\n            setIsLoading(false)\n            if (res.status === 200) {\n              navigate('/event')\n            }\n          })\n          .catch((error) => {\n            console.log(error)\n            setIsLoading(false)\n            const errorMsg = error.response?.data?.message || 'Something went wrong'\n            toast.error(errorMsg)\n          })\n      : updateEvent(data)\n          .then((res) => {\n            setIsLoading(false)\n            if (res.status === 200) {\n              navigate('/event')\n            }\n          })\n          .catch((error) => {\n            setIsLoading(false)\n            console.log(error)\n            const errorMsg = error.response?.data?.message || 'Something went wrong'\n            toast.error(errorMsg)\n          })\n  }\n  const formatDateToYMD = (date) => {\n    if (!date) return ''\n    const parts = date.split('/')\n\n    if (parts.length === 3) {\n      const [day, month, year] = parts\n      return `${year}-${month}-${day}`\n    }\n    return ''\n  }\n\n  useEffect(() => {\n    if (state?.editData) {\n      setIsUpdate(state.editData._id)\n      setValue('title', state.editData.title)\n      setValue('date', formatDateToYMD(state.editData.modifydate))\n    }\n  }, [state, setValue])\n\n  const navigate = useNavigate()\n  return (\n    <>\n      <div className=\"bg-light min-vh-100\">\n        <ToastContainer />\n        <CContainer className=\"mt-3\">\n          <CRow>\n            <CCol md={8}>\n              <CCard>\n                <CCardHeader>{isUpdate ? 'Update' : 'Add'} Form</CCardHeader>\n                <CCardBody>\n                  <CForm className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n                    <CCol xl={6} md={12}>\n                      <CFormLabel>Title</CFormLabel>\n                      <CFormInput\n                        type=\"text\"\n                        placeholder=\"Title\"\n                        {...register('title', { required: 'Title is required' })}\n                        invalid={!!errors.title}\n                      />\n                      <CFormFeedback invalid>{errors.title?.message}</CFormFeedback>\n                    </CCol>\n                    <CCol xl={6} md={12}>\n                      <CFormLabel>Date</CFormLabel>\n                      <CFormInput\n                        type=\"date\"\n                        {...register('date', { required: 'Date is required' })}\n                        invalid={!!errors.date}\n                        value={getValues('data')}\n                      />\n                      <CFormFeedback invalid>{errors.date?.message}</CFormFeedback>\n                    </CCol>\n                    <CCol md={12} className=\"text-center submitButton\">\n                      {isLoading ? (\n                        <CButton disabled>\n                          <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                          Loading...\n                        </CButton>\n                      ) : (\n                        <CButton type=\"submit\" className=\"AddButton\">\n                          {isUpdate === '' ? 'Add' : 'Update'}\n                        </CButton>\n                      )}\n                    </CCol>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    </>\n  )\n}\n\nexport default Eventform\n"],"names":["Eventform","_errors$title","_errors$date","register","handleSubmit","formState","errors","setValue","getValues","useForm","state","useLocation","isUpdate","setIsUpdate","useState","isLoading","setIsLoading","useEffect","editData","_id","title","date","parts","split","length","day","month","year","concat","formatDateToYMD","modifydate","navigate","useNavigate","_jsx","_Fragment","children","_jsxs","className","ToastContainer","CContainer","CRow","CCol","md","CCard","CCardHeader","CCardBody","CForm","onSubmit","data","id","addEvent","then","res","status","catch","error","_error$response","_error$response$data","console","log","errorMsg","response","message","toast","updateEvent","_error$response2","_error$response2$data","xl","CFormLabel","CFormInput","type","placeholder","required","invalid","CFormFeedback","value","CButton","disabled","CSpinner","component","size"],"sourceRoot":""}