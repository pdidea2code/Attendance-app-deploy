{"version":3,"file":"static/js/5910.6624614e.chunk.js","mappings":"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","sources":["views/role/Role.js","../node_modules/@mui/icons-material/esm/DeleteRounded.js","../node_modules/@mui/icons-material/esm/EditRounded.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport swal from 'sweetalert'\nimport { CCard, CCardBody, CCardHeader, CCol, CContainer, CRow, CSpinner } from '@coreui/react'\nimport { deleteRole, getallRole, getrole } from 'src/redux/api/api'\nimport { toast, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Button } from '@mui/material'\n\nimport { useNavigate } from 'react-router-dom'\nimport * as Icons from '@mui/icons-material'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst Role = () => {\n  const [roles, setRoles] = useState([])\n  const navigate = useNavigate()\n  const [isLoading, setIsLoading] = useState(false)\n  const [permission, setPermissions] = useState([])\n  const auth = useSelector((state) => state.auth)\n  const dispatch = useDispatch()\n\n  const getroll = async () => {\n    try {\n      setIsLoading(true)\n      const res = await getallRole()\n      setRoles(res.data.info)\n    } catch (error) {\n      console.log(error)\n      toast.error(error.response?.data?.message || 'Failed to fetch roles')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const fetchPermissions = async () => {\n      await getrole(dispatch)\n      setPermissions(auth.permission)\n    }\n    fetchPermissions()\n  }, []) // Add auth.permission to dependency array\n\n  useEffect(() => {\n    getroll()\n  }, []) // Add permission to dependency array\n\n  return (\n    <CContainer>\n      <ToastContainer draggable />\n      {isLoading ? (\n        <div className=\"d-flex justify-content-center\">\n          <CSpinner className=\"theme-spinner-color\" />\n        </div>\n      ) : (\n        <CRow>\n          <CCol md={12} xl={10}>\n            {permission.includes('role.add') && (\n              <div className=\"right-text\">\n                <Button\n                  variant=\"contained\"\n                  size=\"medium\"\n                  className=\"AddButton\"\n                  onClick={() => navigate('/roleform', { state: { role: 'user' } })}\n                >\n                  Add\n                </Button>\n              </div>\n            )}\n            {roles.map((data) => (\n              <CCard key={data._id} className=\"mb-2\">\n                <CCardHeader>\n                  <CRow>\n                    <CCol md={10} xl={10}>\n                      {data.name}\n                    </CCol>\n                    <CCol md={2} xl={2}>\n                      {permission.includes('role.delete') && (\n                        <Icons.DeleteRounded\n                          onClick={async () => {\n                            const confirm = await swal({\n                              title: 'Are you sure?',\n                              text: 'Are you sure? Want to delete this role? All related data will also be deleted.',\n                              icon: 'warning',\n                              buttons: ['No, cancel it!', 'Yes, I am sure!'],\n                              dangerMode: true,\n                            })\n                            if (confirm) {\n                              try {\n                                await deleteRole({ id: data._id })\n                                toast.success('Deleted successfully!')\n                                getroll() // Refresh the roles list\n                              } catch (error) {\n                                toast.error(error?.response?.data?.message || 'Error occurred')\n                              }\n                            }\n                          }}\n                        />\n                      )}\n                      {permission.includes('role.edit') && (\n                        <Icons.EditRounded\n                          className=\"editButton\"\n                          onClick={() => navigate('/roleform', { state: { editData: data } })}\n                        />\n                      )}\n                    </CCol>\n                  </CRow>\n                </CCardHeader>\n                <CCardBody>\n                  {data.permission.length > 0 ? (\n                    <div style={{ display: 'flex', flexWrap: 'wrap', gap: '5px' }}>\n                      {data.permission\n                        .sort((a, b) => a.localeCompare(b))\n                        .map((perm, index) => (\n                          <span\n                            key={index}\n                            style={{\n                              backgroundColor: '#D93D4A',\n                              padding: '5px',\n                              color: 'white',\n                              borderRadius: '20px',\n                            }}\n                          >\n                            {perm}\n                          </span>\n                        ))}\n                    </div>\n                  ) : (\n                    <h1>Permission Not Allowed</h1>\n                  )}\n                </CCardBody>\n              </CCard>\n            ))}\n          </CCol>\n        </CRow>\n      )}\n    </CContainer>\n  )\n}\n\nexport default Role\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1\"\n}), 'DeleteRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'EditRounded');"],"names":["Role","roles","setRoles","useState","navigate","useNavigate","isLoading","setIsLoading","permission","setPermissions","auth","useSelector","state","dispatch","useDispatch","getroll","async","res","getallRole","data","info","error","_error$response","_error$response$data","console","log","toast","response","message","useEffect","getrole","fetchPermissions","_jsxs","CContainer","children","_jsx","ToastContainer","draggable","className","CSpinner","CRow","CCol","md","xl","includes","Button","variant","size","onClick","role","map","CCard","CCardHeader","name","Icons","swal","title","text","icon","buttons","dangerMode","deleteRole","id","_id","success","_error$response2","_error$response2$data","editData","CCardBody","length","style","display","flexWrap","gap","sort","a","b","localeCompare","perm","index","backgroundColor","padding","color","borderRadius","createSvgIcon","d"],"sourceRoot":""}