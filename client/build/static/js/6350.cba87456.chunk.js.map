{"version":3,"file":"static/js/6350.cba87456.chunk.js","mappings":"6TAaA,MAqIA,EArI2BA,IAAgB,IAAf,MAAEC,GAAOD,EACnC,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IAIrC,GAAEG,EAAE,MAAEC,EAAK,KAAEC,KAHFC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACJC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OACdb,IA6C5Bc,EAAAA,EAAAA,YAAU,KA3CoBC,WAC5BV,GAAa,GACb,IACE,MAAMW,EAAQ,CACZV,GAAIA,GAGFC,IACFS,EAAMT,MAAQA,GAGZC,IACFQ,EAAMR,KAAOA,GAGf,MACMS,SADYC,EAAAA,EAAAA,IAAkBF,IACnBC,KAAKE,KAEtB,GAAIC,MAAMC,QAAQJ,GAAO,CACvB,MAAMK,QAAsBL,EAAKM,KAAKC,IAAI,IACrCA,EACHC,eAAgBD,EAAKE,UAAWC,EAAAA,EAAAA,IAAcH,EAAKE,UAAY,IAC/DE,kBAAmBJ,EAAKK,aAAcF,EAAAA,EAAAA,IAAcH,EAAKK,aAAe,IAExEC,WAAWC,EAAAA,EAAAA,IAAOP,EAAKQ,IAAK,cAE5BC,cAAeT,EAAKU,SAAUH,EAAAA,EAAAA,IAAOP,EAAKU,QAAS,WAAa,IAEhEC,eAAgBX,EAAKY,UAAWL,EAAAA,EAAAA,IAAOP,EAAKY,SAAU,WAAa,QAKrElC,EAAiBoB,EACnB,CACF,CAAE,MAAOe,GAAQ,IAADC,EAAAC,EACdC,QAAQC,IAAIJ,GACZK,EAAAA,GAAML,OAAW,OAALA,QAAK,IAALA,GAAe,QAAVC,EAALD,EAAOM,gBAAQ,IAAAL,GAAM,QAANC,EAAfD,EAAiBrB,YAAI,IAAAsB,OAAhB,EAALA,EAAuBK,UAAW,oBAChD,CAAC,QACCvC,GAAa,EACf,GAIAwC,EAAuB,GACtB,CAACvC,EAAIC,EAAOC,IAwDf,OACEsC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKxC,GAAG,aAAY0C,SACjB5C,GACC0C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BD,UAC5CF,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,CAACD,UAAU,2BAGtBE,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACM,EAAAA,GAAc,KAEfN,EAAAA,EAAAA,KAACO,EAAAA,GAAY,CACXC,MAAO,aACPrC,KAAMhB,EACNsD,QApEI,CACd,CACEC,KAAM,YACNC,MAAO,MACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,gBACNC,MAAO,UACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAIV,CACEJ,KAAM,iBACNC,MAAO,WACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,WACNC,MAAO,WACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,oBACNC,MAAO,cACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,iBACNC,MAAO,WACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,KAsBAF,QAjBI,CAAC,UAsBZ,E,sBCjIP,MA8SA,EA9SsB3D,IAAgB,IAAf,MAAEC,GAAOD,EAC9B,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5C0D,EAASC,IAAc3D,EAAAA,EAAAA,UAAS,KAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAErC4D,IADWtD,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACXG,GAAOF,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QACnCmD,EAAYC,IAAkB9D,EAAAA,EAAAA,UAAS,KACxC,GAAEG,GAAON,EAETkE,EAAanD,UAEjB,IACE,MAAMoD,EAAM,CAAE7D,GAAIA,GAEZW,SADYmD,EAAAA,EAAAA,IAAaD,IACdlD,KAAKE,KACtB,GAAIC,MAAMC,QAAQJ,GAAO,CACvB,MAAMK,QAAsBL,EAAKM,KAAKC,IAAI,IACrCA,EACH6C,YAAYC,EAAAA,EAAAA,IAAkB9C,EAAK+C,MACnCC,aAAchD,EAAKiD,QAASH,EAAAA,EAAAA,IAAkB9C,EAAKiD,QAAU,IAC7DC,WAAYlD,EAAKmD,KAAI,GAAAC,OAAMpD,EAAKmD,KAAI,UAAW,IAC/CE,oBAAqBrD,EAAKsD,cAAgBtD,EAAKsD,cAAgB,QAGjE5E,EAAiBoB,EACnB,CACF,CAAE,MAAOe,GAAQ,IAADC,EAAAC,EACdC,QAAQC,IAAIJ,GACZK,EAAAA,GAAML,OAAoB,QAAdC,EAAAD,EAAMM,gBAAQ,IAAAL,GAAM,QAANC,EAAdD,EAAgBrB,YAAI,IAAAsB,OAAN,EAAdA,EAAsBK,UAAW,oBAC/C,CAAC,QACCvC,GAAa,EACf,GAGI0E,EAAehE,MAAOE,EAAM+D,KAChC,IACE,MAAMb,EAAM,CACV7D,GAAIW,EAAKgE,IACTD,OAAQA,SAEQE,EAAAA,EAAAA,IAAaf,EAEjC,CAAE,MAAO9B,GAAQ,IAAD8C,EAAAC,EACd5C,QAAQC,IAAIJ,GACZK,EAAAA,GAAML,OAAoB,QAAd8C,EAAA9C,EAAMM,gBAAQ,IAAAwC,GAAM,QAANC,EAAdD,EAAgBlE,YAAI,IAAAmE,OAAN,EAAdA,EAAsBxC,UAAW,oBAC/C,CAAC,QACCsB,GACF,IAGFpD,EAAAA,EAAAA,YAAU,KACiBC,iBACjBsE,EAAAA,EAAAA,IAAQtB,GACdE,EAAepD,EAAKmD,WAAW,EAEjCsB,EAAkB,GACjB,KAEHxE,EAAAA,EAAAA,YAAU,KACRoD,GAAY,GACX,IAEH,MAAMX,EAAU,CACd,CACEC,KAAM,aACNC,MAAO,OACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,eACNC,MAAO,SACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,aACNC,MAAO,OACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAIV,CACEJ,KAAM,OACNC,MAAO,OACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,YACNC,MAAO,YACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,MACNC,MAAO,MACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAIV,CACEJ,KAAM,QACNC,MAAO,QACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,sBACNC,MAAO,YACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,SACNC,MAAO,SACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,EACN2B,iBAAmBP,GACF,YAAXA,GAEAlC,EAAAA,EAAAA,KAAA,KACE0C,MAAO,CACLC,WAAY,UACZC,MAAO,QACPC,aAAc,OACdC,UAAW,SACXC,QAAS,OACT7C,SAEDgC,IAGe,aAAXA,GAEPlC,EAAAA,EAAAA,KAAA,KACE0C,MAAO,CACLC,WAAY,MACZC,MAAO,QACPC,aAAc,OACdC,UAAW,SACXC,QAAS,OACT7C,SAEDgC,IAGe,aAAXA,GAEPlC,EAAAA,EAAAA,KAAA,KACE0C,MAAO,CACLC,WAAY,UACZC,MAAO,QACPC,aAAc,OACdC,UAAW,SACXC,QAAS,OACT7C,SAEDgC,IAIA,QAMX5D,MAAMC,QAAQ2C,IAAeA,EAAW8B,SAAS,eACnDvC,EAAQwC,KAAK,CACXvC,KAAM,MACNC,MAAO,SACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,EACN2B,iBAAmBS,IACjB,MAAMC,EAAWhG,EAAciG,MAAMjF,GAASA,EAAKgE,MAAQe,IAE3D,MAAwB,aAApBC,EAASjB,QAET7B,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACqD,EAAAA,GAAO,CACNlD,UAAU,YACVuC,MAAO,CAAEK,QAAS,MAAOJ,WAAY,MAAOC,MAAO,SACnDU,QAASA,KACPrB,EAAakB,EAAU,WAAW,EAClCjD,SACH,YAGDF,EAAAA,EAAAA,KAACqD,EAAAA,GAAO,CACNX,MAAO,CAAEK,QAAS,MAAOJ,WAAY,UAAWC,MAAO,SACvDU,QAASA,KACPrB,EAAakB,EAAU,UAAU,EACjCjD,SACH,eAKwB,aAApBiD,EAASjB,QAEhB7B,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACqD,EAAAA,GAAO,CACNlD,UAAU,YACVuC,MAAO,CAAEK,QAAS,MAAOJ,WAAY,UAAWC,MAAO,SACvDU,QAASA,KACPrB,EAAakB,EAAU,WAAW,EAClCjD,SACH,YAGDF,EAAAA,EAAAA,KAACqD,EAAAA,GAAO,CACNX,MAAO,CAAEK,QAAS,MAAOJ,WAAY,UAAWC,MAAO,SACvDU,QAASA,KACPrB,EAAakB,EAAU,UAAU,EACjCjD,SACH,eAKwB,YAApBiD,EAASjB,QAEhB7B,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACqD,EAAAA,GAAO,CACNlD,UAAU,YACVuC,MAAO,CAAEK,QAAS,MAAOJ,WAAY,UAAWC,MAAO,SACvDU,QAASA,KACPrB,EAAakB,EAAU,WAAW,EAClCjD,SACH,YAGDF,EAAAA,EAAAA,KAACqD,EAAAA,GAAO,CACNX,MAAO,CAAEK,QAAS,MAAOJ,WAAY,MAAOC,MAAO,SACnDU,QAASA,KACPrB,EAAakB,EAAU,WAAW,EAClCjD,SACH,mBAjBA,CAsBP,KAMR,OACEF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG5C,GACC0C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BD,UAC5CF,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,CAACD,UAAU,2BAGtBE,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACM,EAAAA,GAAc,KAafN,EAAAA,EAAAA,KAACO,EAAAA,GAAY,CACXC,MAAO,QACPrC,KAAMhB,EACNsD,QAASA,EACTG,QA1BM,CAAC,EA2BPpD,GAAG,cAIR,ECLP,EAxRwB+F,KAAO,IAADC,EAC5B,MAAM,MAAE1F,IAAU2F,EAAAA,EAAAA,OACXC,EAAgBC,IAAqBtG,EAAAA,EAAAA,UAAS,CAAC,IAC/CuG,EAAOC,IAAYxG,EAAAA,EAAAA,UAAS,IAC7ByG,GAAWnG,EAAAA,EAAAA,OACVuD,EAAYC,IAAkB9D,EAAAA,EAAAA,UAAS,KACvC0G,EAASC,IAAc3G,EAAAA,EAAAA,WAAS,IAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GACrC4D,GAAWrD,EAAAA,EAAAA,MACXG,GAAOF,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QACnCqD,EAAY6C,IAAiB5G,EAAAA,EAAAA,UAAS,CAAC,IACvCI,EAAOyG,IAAY7G,EAAAA,EAAAA,UAAS,KAC5BK,EAAMyG,IAAW9G,EAAAA,EAAAA,UAAS,KAE3B,SACJ+G,EAAQ,aACRC,EACAC,WAAW,OAAEC,GAAQ,SACrBC,EAAQ,MACRC,IACEC,EAAAA,EAAAA,MAEJ,SAASC,EAAqBC,GAC5B,MAAMnD,EAAO,IAAIoD,KAAKD,GAChB1F,EAAMuC,EAAKqD,UAAUC,WAAWC,SAAS,EAAG,KAC5CvH,GAASgE,EAAKwD,WAAa,GAAGF,WAAWC,SAAS,EAAG,KACrDtH,EAAO+D,EAAKyD,cAClB,MAAM,GAANpD,OAAU5C,EAAG,KAAA4C,OAAIrE,EAAK,KAAAqE,OAAIpE,EAC5B,CAEA,MAAMyH,EAAqBlH,iBAAwB,IAAjBE,EAAIiH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACvC7H,GAAa,GACb,IACE,MAAM8D,EAAM,CACV7D,GAAIM,EAAMqF,SAAShB,KAGrB,GAAIhE,GAAQA,EAAKsD,KAAM,CACrB,MAAMpD,EAAOF,EAAKsD,KAAK8D,MAAM,KAC7BrB,EAAS7F,EAAK,IACd8F,EAAQ9F,EAAK,IACbgD,EAAI5D,MAAQY,EAAK,GACjBgD,EAAI3D,KAAOW,EAAK,EAClB,CAEA,MAAMmH,QAAYC,EAAAA,EAAAA,IAAmBpE,GAE/BqE,EAAQ,CACZC,WAAW9G,EAAAA,EAAAA,IAAc2G,EAAIrH,KAAKE,KAAKsH,WACvCC,kBAAkB/G,EAAAA,EAAAA,IAAc2G,EAAIrH,KAAKE,KAAKuH,kBAC9CC,gBAAgBhH,EAAAA,EAAAA,IAAc2G,EAAIrH,KAAKE,KAAKwH,gBAC5CC,iBAAkBN,EAAIrH,KAAKE,KAAKyH,iBAChCC,YAAaP,EAAIrH,KAAKE,KAAK0H,YAC3BC,YAAaR,EAAIrH,KAAKE,KAAK2H,aAG7B/B,EAAcyB,GAEdnI,GAAa,EACf,CAAE,MAAOgC,GAAQ,IAADC,EAAAC,EACdlC,GAAa,GACbmC,QAAQC,IAAIJ,GACZ,MAAM0G,GAAyB,QAAdzG,EAAAD,EAAMM,gBAAQ,IAAAL,GAAM,QAANC,EAAdD,EAAgBrB,YAAI,IAAAsB,OAAN,EAAdA,EAAsBK,UAAW,uBAClDF,EAAAA,GAAML,MAAM0G,EACd,CACF,EA6CA,OApCAjI,EAAAA,EAAAA,YAAU,KACiBC,WACvB,UACQsE,EAAAA,EAAAA,IAAQtB,GACdE,EAAepD,EAAKmD,YAChB5C,MAAMC,QAAQ2C,IAAeA,EAAW8B,SAAS,oBACnDmC,GAEJ,CAAE,MAAO5F,GACPK,EAAAA,GAAML,MAAM,+BACd,CAAC,QACCyE,GAAW,EACb,GAGFxB,EAAkB,GACjB,KAEHxE,EAAAA,EAAAA,YAAU,KACR,IAAIF,IAASA,EAAMqF,SAKjB,OADAW,EAAS,aACF,KAJPH,EAAkB7F,EAAMqF,UACxBU,EAAS/F,EAAMoI,SAAWpI,EAAMqF,SAASS,MAI3C,GACC,CAAC9F,EAAOgG,KAEX9F,EAAAA,EAAAA,YAAU,KACJM,MAAMC,QAAQR,EAAKmD,aAAenD,EAAKmD,WAAW8B,SAAS,oBAC7DmC,IAGFX,EAAS,QAAQvF,EAAAA,EAAAA,IAAO,IAAI4F,KAAQ,WAAW,GAC9C,IAECd,GACK/D,EAAAA,EAAAA,KAAA,OAAAE,SAAK,gBAIZF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG5B,MAAMC,QAAQ2C,IAAeA,EAAW8B,SAAS,sBAChD3C,EAAAA,EAAAA,MAAC8F,EAAAA,GAAU,CAAAjG,SAAA,EACTF,EAAAA,EAAAA,KAACM,EAAAA,GAAc,KACfD,EAAAA,EAAAA,MAAC+F,EAAAA,GAAI,CAACjG,UAAU,yBAAwBD,SAAA,EACtCF,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,EAAErG,UAClBG,EAAAA,EAAAA,MAACmG,EAAAA,GAAK,CAACrG,UAAU,iBAAgBD,SAAA,EAC/BF,EAAAA,EAAAA,KAACyG,EAAAA,GAAW,CAACtG,UAAU,oCAAmCD,SAAC,sBAG3DF,EAAAA,EAAAA,KAAC0G,EAAAA,GAAS,CAAAxG,UACRG,EAAAA,EAAAA,MAAC+F,EAAAA,GAAI,CAAAlG,SAAA,EACHF,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,EAAGpG,UAAU,mBAAkBD,UAC/CF,EAAAA,EAAAA,KAAC2G,EAAAA,GAAM,CACLC,IAAKhD,EACLiD,IAAI,WACJ1G,UAAU,qCACVuC,MAAO,CACLoE,WAAY,sBACZC,MAAO,QACPC,OAAQ,SAEVC,YAAcC,GAAOA,EAAEC,OAAOzE,MAAM0E,UAAY,aAChDC,WAAaH,GAAOA,EAAEC,OAAOzE,MAAM0E,UAAY,gBAGnDpH,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,EAAErG,UAClBG,EAAAA,EAAAA,MAAC+F,EAAAA,GAAI,CAAAlG,SAAA,EACHF,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,WAAe,IAAgB,OAAdwD,QAAc,IAAdA,OAAc,EAAdA,EAAgBhD,WAG7CV,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,YAAgB,IAAgB,OAAdwD,QAAc,IAAdA,OAAc,EAAdA,EAAgB4D,YAG9CtH,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,eAAmB,IAAgB,OAAdwD,QAAc,IAAdA,OAAc,EAAdA,EAAgB6D,cAGjDvH,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,oBAAyB,IAChCyE,EAAmC,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgB8D,WAG1CxH,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,eAAmB,IAAgB,OAAdwD,QAAc,IAAdA,OAAc,EAAdA,EAAgB+D,eAGjDzH,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBAAsB,IAAgB,OAAdwD,QAAc,IAAdA,OAAc,EAAdA,EAAgBgE,cAGpD1H,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,wBAA6B,IACpCyE,EAAmC,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBiE,2BAOlD3H,EAAAA,EAAAA,KAAC4H,EAAAA,GAAW,CAACzH,UAAU,cAAaD,SACjC5B,MAAMC,QAAQ2C,IAAeA,EAAW8B,SAAS,mBAChDhD,EAAAA,EAAAA,KAACqD,EAAAA,GAAO,CACNT,MAAM,OACNzC,UAAU,kBACVmD,QAASA,IACPQ,EAAS,gBAAiB,CACxBhG,MAAO,CAAEqF,SAAUrF,EAAMqF,SAAU+C,SAAUpI,EAAMoI,YAEtDhG,SACF,wBAOR5B,MAAMC,QAAQ2C,IAAeA,EAAW8B,SAAS,qBAChDhD,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,EAAErG,UAClBG,EAAAA,EAAAA,MAACmG,EAAAA,GAAK,CAACrG,UAAU,iBAAgBD,SAAA,EAC/BF,EAAAA,EAAAA,KAACyG,EAAAA,GAAW,CAACtG,UAAU,oCAAmCD,SAAC,yBAG3DF,EAAAA,EAAAA,KAAC0G,EAAAA,GAAS,CAAAxG,UACRG,EAAAA,EAAAA,MAAC+F,EAAAA,GAAI,CAAAlG,SAAA,EACHF,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,GAAIpG,UAAU,OAAMD,UACpCG,EAAAA,EAAAA,MAACwH,EAAAA,GAAK,CAAC1H,UAAU,UAAU2H,SAAUzD,GA/I1CpG,UACfkH,EAAmBhH,GACnB,MAAME,EAAOF,EAAKsD,KAAK8D,MAAM,KAC7BrB,EAAS7F,EAAK,IACd8F,EAAQ9F,EAAK,GAAG,IA2IgE6B,SAAA,EAC1DG,EAAAA,EAAAA,MAACgG,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAErG,SAAA,EACjBF,EAAAA,EAAAA,KAAC+H,EAAAA,GAAU,CACTC,KAAK,WACD5D,EAAS,OAAQ,CAAE6D,SAAU,sBACjCC,UAAW3D,EAAO9C,QAGpBzB,EAAAA,EAAAA,KAACmI,EAAAA,GAAa,CAACD,SAAO,EAAAhI,SAAa,QAAbsD,EAAEe,EAAO9C,YAAI,IAAA+B,OAAA,EAAXA,EAAa1D,cAEvCE,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAErG,UACjBF,EAAAA,EAAAA,KAACqD,EAAAA,GAAO,CAAC2E,KAAK,SAAQ9H,SAAC,iBAI7BF,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,gBAAoB,IAAY,OAAVkB,QAAU,IAAVA,OAAU,EAAVA,EAAYuE,UAAU,aAGxD3F,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,wBAA4B,IAAY,OAAVkB,QAAU,IAAVA,OAAU,EAAVA,EAAYwE,iBAAiB,aAGvE5F,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,oBAAwB,IAAY,OAAVkB,QAAU,IAAVA,OAAU,EAAVA,EAAYyE,eAAe,aAGjE7F,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,gBAAoB,IAAY,OAAVkB,QAAU,IAAVA,OAAU,EAAVA,EAAY4E,YAAY,cAG1DhG,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBAAsB,IAAY,OAAVkB,QAAU,IAAVA,OAAU,EAAVA,EAAY2E,YAAY,cAG5D/F,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAInG,UAAU,OAAMD,UAC5BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,sBAA0B,IAAY,OAAVkB,QAAU,IAAVA,OAAU,EAAVA,EAAY0E,iBAAiB,uBAS9ExH,MAAMC,QAAQ2C,IAAeA,EAAW8B,SAAS,qBAChDhD,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,GAAIpG,UAAU,OAAMD,UACpCF,EAAAA,EAAAA,KAACoI,EAAkB,CAAClL,MAAO,CAAEM,GAAIkG,EAAevB,IAAK1E,MAAOA,EAAOC,KAAMA,OAG5EY,MAAMC,QAAQ2C,IAAeA,EAAW8B,SAAS,gBAChDhD,EAAAA,EAAAA,KAAA,OAAKxC,GAAG,QAAO0C,UACbF,EAAAA,EAAAA,KAACqG,EAAAA,GAAI,CAACC,GAAI,GAAIC,GAAI,GAAGrG,UACnBF,EAAAA,EAAAA,KAACqI,EAAa,CAACnL,MAAO,CAAEM,GAAIkG,EAAevB,kBAOtD,C","sources":["views/employee/Employeeattendance.js","views/employee/Employeeleave.js","views/employee/Employeeprofile.js"],"sourcesContent":["import { getUserAttendance, minutesToHHMM } from 'src/redux/api/api'\nimport { useEffect, useState } from 'react'\nimport * as Icons from '@mui/icons-material'\nimport swal from 'sweetalert'\nimport { CSpinner } from '@coreui/react'\nimport { Button } from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MUIDataTable from 'mui-datatables'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { format } from 'date-fns'\n\nconst Employeeattendance = ({ props }) => {\n  const [dataTableData, setDataTabledata] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const auth = useSelector((state) => state.auth)\n  const { id, month, year } = props\n\n  const getemployeeattendance = async () => {\n    setIsLoading(true)\n    try {\n      const datas = {\n        id: id,\n      }\n\n      if (month) {\n        datas.month = month\n      }\n\n      if (year) {\n        datas.year = year\n      }\n\n      const res = await getUserAttendance(datas)\n      const data = res.data.info\n\n      if (Array.isArray(data)) {\n        const formattedData = await data.map((item) => ({\n          ...item,\n          modifyovertime: item.overtime ? minutesToHHMM(item.overtime) : '-',\n          modifyworkingtime: item.workingtime ? minutesToHHMM(item.workingtime) : '-',\n\n          modifyday: format(item.day, 'dd/MM/yyyy'),\n\n          modifycheckin: item.checkin ? format(item.checkin, 'hh:mm a') : '-',\n\n          modifycheckout: item.checkout ? format(item.checkout, 'hh:mm a') : '-',\n\n          //\n        }))\n\n        setDataTabledata(formattedData)\n      }\n    } catch (error) {\n      console.log(error)\n      toast.error(error?.response?.data?.message || 'An error occurred')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    getemployeeattendance()\n  }, [id, month, year])\n\n  const columns = [\n    {\n      name: 'modifyday',\n      label: 'day',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifycheckin',\n      label: 'checkin',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n\n    {\n      name: 'modifycheckout',\n      label: 'checkout',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'location',\n      label: 'location',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyworkingtime',\n      label: 'workingtime',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyovertime',\n      label: 'overtime',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n  ]\n\n  const options = {}\n\n  return (\n    <>\n      <div id=\"attendance\">\n        {isLoading ? (\n          <div className=\"d-flex justify-content-center\">\n            <CSpinner className=\"theme-spinner-color\" />\n          </div>\n        ) : (\n          <>\n            <ToastContainer />\n\n            <MUIDataTable\n              title={'Attendance'}\n              data={dataTableData}\n              columns={columns}\n              options={options}\n            />\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Employeeattendance\n","import { useEffect, useState } from 'react'\nimport { changeStatus, convertToDDMMYYYY, getrole, getUserLeave } from 'src/redux/api/api'\nimport * as Icons from '@mui/icons-material'\nimport swal from 'sweetalert'\nimport { CButton, CSpinner } from '@coreui/react'\nimport { Button } from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MUIDataTable from 'mui-datatables'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport changeState from 'src/redux/reducer/changeState'\n\nconst Employeeleave = ({ props }) => {\n  const [dataTableData, setDataTabledata] = useState([])\n  const [baseUrl, setBaseUrl] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const auth = useSelector((state) => state.auth)\n  const [permission, setPermissions] = useState([])\n  const { id } = props\n\n  const attendance = async () => {\n    // setIsLoading(true)\n    try {\n      const req = { id: id }\n      const res = await getUserLeave(req)\n      const data = res.data.info\n      if (Array.isArray(data)) {\n        const formattedData = await data.map((item) => ({\n          ...item,\n          modifydate: convertToDDMMYYYY(item.date),\n          modifytodate: item.todate ? convertToDDMMYYYY(item.todate) : '-',\n          modifyhour: item.hour ? `${item.hour} Hour ` : '-',\n          modifyapprovebyname: item.approvebyname ? item.approvebyname : '-',\n        }))\n        // console.log(formattedData)\n        setDataTabledata(formattedData)\n      }\n    } catch (error) {\n      console.log(error)\n      toast.error(error.response?.data?.message || 'An error occurred')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const changestatus = async (data, status) => {\n    try {\n      const req = {\n        id: data._id,\n        status: status,\n      }\n      const res = await changeStatus(req)\n      // console.log(res)\n    } catch (error) {\n      console.log(error)\n      toast.error(error.response?.data?.message || 'An error occurred')\n    } finally {\n      attendance()\n    }\n  }\n\n  useEffect(() => {\n    const fetchPermissions = async () => {\n      await getrole(dispatch)\n      setPermissions(auth.permission)\n    }\n    fetchPermissions()\n  }, [])\n\n  useEffect(() => {\n    attendance()\n  }, [])\n\n  const columns = [\n    {\n      name: 'modifydate',\n      label: 'date',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifytodate',\n      label: 'todate',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyhour',\n      label: 'hour',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n\n    {\n      name: 'type',\n      label: 'type',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'levaetype',\n      label: 'levaetype',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'day',\n      label: 'day',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n\n    {\n      name: 'reson',\n      label: 'reson',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'modifyapprovebyname',\n      label: 'approveby',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'status',\n      label: 'status',\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (status) => {\n          if (status === 'Pending') {\n            return (\n              <p\n                style={{\n                  background: '#ffc800',\n                  color: 'black',\n                  borderRadius: '20px',\n                  textAlign: 'center',\n                  padding: '4px',\n                }}\n              >\n                {status}\n              </p>\n            )\n          } else if (status === 'Rejected') {\n            return (\n              <p\n                style={{\n                  background: 'red',\n                  color: 'black',\n                  borderRadius: '20px',\n                  textAlign: 'center',\n                  padding: '4px',\n                }}\n              >\n                {status}\n              </p>\n            )\n          } else if (status === 'Approved') {\n            return (\n              <p\n                style={{\n                  background: '#00ff00',\n                  color: 'black',\n                  borderRadius: '20px',\n                  textAlign: 'center',\n                  padding: '4px',\n                }}\n              >\n                {status}\n              </p>\n            )\n          }\n          return null // return null for any other status\n        },\n      },\n    },\n  ]\n\n  if (Array.isArray(permission) && permission.includes('leave.edit')) {\n    columns.push({\n      name: '_id',\n      label: 'Action',\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          const editData = dataTableData.find((data) => data._id === value)\n\n          if (editData.status === 'Approved') {\n            return (\n              <>\n                <CButton\n                  className=\"me-1 mb-1\"\n                  style={{ padding: '5px', background: 'red', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Rejected')\n                  }}\n                >\n                  Reject\n                </CButton>\n                <CButton\n                  style={{ padding: '5px', background: '#ffc800', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Pending')\n                  }}\n                >\n                  Pending\n                </CButton>\n              </>\n            )\n          } else if (editData.status === 'Rejected') {\n            return (\n              <>\n                <CButton\n                  className=\"me-1 mb-1\"\n                  style={{ padding: '5px', background: '#00ff00', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Approved')\n                  }}\n                >\n                  Approv\n                </CButton>\n                <CButton\n                  style={{ padding: '5px', background: '#ffc800', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Pending')\n                  }}\n                >\n                  Pending\n                </CButton>\n              </>\n            )\n          } else if (editData.status === 'Pending') {\n            return (\n              <>\n                <CButton\n                  className=\"me-1 mb-1\"\n                  style={{ padding: '5px', background: '#00ff00', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Approved')\n                  }}\n                >\n                  Approv\n                </CButton>\n                <CButton\n                  style={{ padding: '5px', background: 'red', color: 'black' }}\n                  onClick={() => {\n                    changestatus(editData, 'Rejected')\n                  }}\n                >\n                  Reject\n                </CButton>\n              </>\n            )\n          }\n        },\n      },\n    })\n  }\n  const options = {}\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"d-flex justify-content-center\">\n          <CSpinner className=\"theme-spinner-color\" />\n        </div>\n      ) : (\n        <>\n          <ToastContainer />\n          {/* {Array.isArray(permission) && permission.includes('leave.add') && (\n            <div className=\"right-text\">\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                className=\"AddButton\"\n                onClick={() => navigate('/employeeform')}\n              >\n                Add\n              </Button>\n            </div>\n          )} */}\n          <MUIDataTable\n            title={'Leave'}\n            data={dataTableData}\n            columns={columns}\n            options={options}\n            id=\"leave\"\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Employeeleave\n","import {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CImage,\n  CRow,\n  CButton,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n} from '@coreui/react'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { getrole, getTotalAttendance, minutesToHHMM } from 'src/redux/api/api'\nimport { toast, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Employeeattendance from './Employeeattendance'\n\nimport { format } from 'date-fns'\nimport { useForm } from 'react-hook-form'\nimport Employeeleave from './Employeeleave'\n\nconst Employeeprofile = () => {\n  const { state } = useLocation()\n  const [employeedetail, setEmployeedetail] = useState({})\n  const [image, setImage] = useState('')\n  const navigate = useNavigate()\n  const [permission, setPermissions] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n  const dispatch = useDispatch()\n  const auth = useSelector((state) => state.auth)\n  const [attendance, setAttendance] = useState({})\n  const [month, setMonth] = useState('')\n  const [year, setYear] = useState('')\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm()\n\n  function formatDateToDDMMYYYY(isoDate) {\n    const date = new Date(isoDate)\n    const day = date.getDate().toString().padStart(2, '0')\n    const month = (date.getMonth() + 1).toString().padStart(2, '0')\n    const year = date.getFullYear()\n    return `${day}/${month}/${year}`\n  }\n\n  const gettotalattendance = async (data = null) => {\n    setIsLoading(true)\n    try {\n      const req = {\n        id: state.editData._id,\n      }\n\n      if (data && data.date) {\n        const info = data.date.split('-')\n        setMonth(info[1])\n        setYear(info[0])\n        req.month = info[1]\n        req.year = info[0]\n      }\n\n      const res = await getTotalAttendance(req)\n\n      const infom = {\n        totalhour: minutesToHHMM(res.data.info.totalhour),\n        totalworkingtime: minutesToHHMM(res.data.info.totalworkingtime),\n        totoalovertime: minutesToHHMM(res.data.info.totoalovertime),\n        totoalattengance: res.data.info.totoalattengance,\n        workingdays: res.data.info.workingdays,\n        daysInMonth: res.data.info.daysInMonth,\n      }\n\n      setAttendance(infom)\n\n      setIsLoading(false)\n    } catch (error) {\n      setIsLoading(false)\n      console.log(error)\n      const errorMsg = error.response?.data?.message || 'Something went wrong'\n      toast.error(errorMsg)\n    }\n  }\n\n  const onSubmit = async (data) => {\n    gettotalattendance(data)\n    const info = data.date.split('-')\n    setMonth(info[1])\n    setYear(info[0])\n  }\n\n  useEffect(() => {\n    const fetchPermissions = async () => {\n      try {\n        await getrole(dispatch)\n        setPermissions(auth.permission)\n        if (Array.isArray(permission) && permission.includes('attendance.view')) {\n          gettotalattendance()\n        }\n      } catch (error) {\n        toast.error('Failed to fetch permissions.')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchPermissions()\n  }, [])\n\n  useEffect(() => {\n    if (state && state.editData) {\n      setEmployeedetail(state.editData)\n      setImage(state.imageUrl + state.editData.image)\n    } else {\n      navigate('/employee')\n      return null // Ensure the component doesn't render anything if navigation occurs\n    }\n  }, [state, navigate])\n\n  useEffect(() => {\n    if (Array.isArray(auth.permission) && auth.permission.includes('attendance.view')) {\n      gettotalattendance()\n    }\n\n    setValue('date', format(new Date(), 'yyyy-MM'))\n  }, [])\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <>\n      {Array.isArray(permission) && permission.includes('employee.profile') && (\n        <CContainer>\n          <ToastContainer />\n          <CRow className=\"justify-content-center\">\n            <CCol md={12} xl={6}>\n              <CCard className=\"mb-4 shadow-sm\">\n                <CCardHeader className=\"bg-primary text-white text-center\">\n                  Employee Profile\n                </CCardHeader>\n                <CCardBody>\n                  <CRow>\n                    <CCol md={12} xl={4} className=\"text-center mb-3\">\n                      <CImage\n                        src={image}\n                        alt=\"Employee\"\n                        className=\"img-fluid rounded-circle shadow-lg\"\n                        style={{\n                          transition: 'transform 0.3s ease',\n                          width: '150px',\n                          height: '150px',\n                        }}\n                        onMouseOver={(e) => (e.target.style.transform = 'scale(1.1)')}\n                        onMouseOut={(e) => (e.target.style.transform = 'scale(1)')}\n                      />\n                    </CCol>\n                    <CCol md={12} xl={8}>\n                      <CRow>\n                        <CCol md={12} className=\"mb-3\">\n                          <h5>\n                            <strong>Name :</strong> {employeedetail?.name}\n                          </h5>\n                        </CCol>\n                        <CCol md={12} className=\"mb-3\">\n                          <h6>\n                            <strong>Email :</strong> {employeedetail?.email}\n                          </h6>\n                        </CCol>\n                        <CCol md={12} className=\"mb-3\">\n                          <h6>\n                            <strong>Phone no.:</strong> {employeedetail?.phoneno}\n                          </h6>\n                        </CCol>\n                        <CCol md={12} className=\"mb-3\">\n                          <h6>\n                            <strong>Date of birth :</strong>{' '}\n                            {formatDateToDDMMYYYY(employeedetail?.dob)}\n                          </h6>\n                        </CCol>\n                        <CCol md={12} className=\"mb-3\">\n                          <h6>\n                            <strong>Position :</strong> {employeedetail?.position}\n                          </h6>\n                        </CCol>\n                        <CCol md={12} className=\"mb-3\">\n                          <h6>\n                            <strong>Employee ID :</strong> {employeedetail?.user_id}\n                          </h6>\n                        </CCol>\n                        <CCol md={12} className=\"mb-3\">\n                          <h6>\n                            <strong>Account Open Date :</strong>{' '}\n                            {formatDateToDDMMYYYY(employeedetail?.createdAt)}\n                          </h6>\n                        </CCol>\n                      </CRow>\n                    </CCol>\n                  </CRow>\n                </CCardBody>\n                <CCardFooter className=\"text-center\">\n                  {Array.isArray(permission) && permission.includes('employee.edit') && (\n                    <CButton\n                      color=\"info\"\n                      className=\"text-white me-2\"\n                      onClick={() =>\n                        navigate('/employeeform', {\n                          state: { editData: state.editData, imageUrl: state.imageUrl },\n                        })\n                      }\n                    >\n                      Edit Profile\n                    </CButton>\n                  )}\n                </CCardFooter>\n              </CCard>\n            </CCol>\n            {Array.isArray(permission) && permission.includes('attendance.view') && (\n              <CCol md={12} xl={6}>\n                <CCard className=\"mb-4 shadow-sm\">\n                  <CCardHeader className=\"bg-primary text-white text-center\">\n                    Employee Attendance\n                  </CCardHeader>\n                  <CCardBody>\n                    <CRow>\n                      <CCol md={12} xl={12} className=\"mb-3\">\n                        <CForm className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n                          <CCol md={8} xl={8}>\n                            <CFormInput\n                              type=\"month\"\n                              {...register('date', { required: 'month is required' })}\n                              invalid={!!errors.date}\n                              // max={Date.now()}\n                            />\n                            <CFormFeedback invalid>{errors.date?.message}</CFormFeedback>\n                          </CCol>\n                          <CCol md={4} xl={4}>\n                            <CButton type=\"submit\"> Get</CButton>\n                          </CCol>\n                        </CForm>\n                      </CCol>\n                      <CCol md={12} className=\"mb-3\">\n                        <h6>\n                          <strong>Total Hour:</strong> {attendance?.totalhour} hrs\n                        </h6>\n                      </CCol>\n                      <CCol md={12} className=\"mb-3\">\n                        <h6>\n                          <strong>Total Working Time:</strong> {attendance?.totalworkingtime} hrs\n                        </h6>\n                      </CCol>\n                      <CCol md={12} className=\"mb-3\">\n                        <h6>\n                          <strong>Total Overtime:</strong> {attendance?.totoalovertime} hrs\n                        </h6>\n                      </CCol>\n                      <CCol md={12} className=\"mb-3\">\n                        <h6>\n                          <strong>Total Days:</strong> {attendance?.daysInMonth} Days\n                        </h6>\n                      </CCol>\n                      <CCol md={12} className=\"mb-3\">\n                        <h6>\n                          <strong>Working Days:</strong> {attendance?.workingdays} Days\n                        </h6>\n                      </CCol>\n                      <CCol md={12} className=\"mb-3\">\n                        <h6>\n                          <strong>Total Attendance:</strong> {attendance?.totoalattengance} Days\n                        </h6>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            )}\n\n            {Array.isArray(permission) && permission.includes('attendance.view') && (\n              <CCol md={12} xl={12} className=\"mb-4\">\n                <Employeeattendance props={{ id: employeedetail._id, month: month, year: year }} />\n              </CCol>\n            )}\n            {Array.isArray(permission) && permission.includes('leave.view') && (\n              <div id=\"leave\">\n                <CCol md={12} xl={12}>\n                  <Employeeleave props={{ id: employeedetail._id }} />\n                </CCol>\n              </div>\n            )}\n          </CRow>\n        </CContainer>\n      )}\n    </>\n  )\n}\n\nexport default Employeeprofile\n"],"names":["_ref","props","dataTableData","setDataTabledata","useState","isLoading","setIsLoading","id","month","year","useNavigate","useDispatch","useSelector","state","auth","useEffect","async","datas","data","getUserAttendance","info","Array","isArray","formattedData","map","item","modifyovertime","overtime","minutesToHHMM","modifyworkingtime","workingtime","modifyday","format","day","modifycheckin","checkin","modifycheckout","checkout","error","_error$response","_error$response$data","console","log","toast","response","message","getemployeeattendance","_jsx","_Fragment","children","className","CSpinner","_jsxs","ToastContainer","MUIDataTable","title","columns","name","label","options","filter","sort","baseUrl","setBaseUrl","dispatch","permission","setPermissions","attendance","req","getUserLeave","modifydate","convertToDDMMYYYY","date","modifytodate","todate","modifyhour","hour","concat","modifyapprovebyname","approvebyname","changestatus","status","_id","changeStatus","_error$response2","_error$response2$data","getrole","fetchPermissions","customBodyRender","style","background","color","borderRadius","textAlign","padding","includes","push","value","editData","find","CButton","onClick","Employeeprofile","_errors$date","useLocation","employeedetail","setEmployeedetail","image","setImage","navigate","loading","setLoading","setAttendance","setMonth","setYear","register","handleSubmit","formState","errors","setValue","watch","useForm","formatDateToDDMMYYYY","isoDate","Date","getDate","toString","padStart","getMonth","getFullYear","gettotalattendance","arguments","length","undefined","split","res","getTotalAttendance","infom","totalhour","totalworkingtime","totoalovertime","totoalattengance","workingdays","daysInMonth","errorMsg","imageUrl","CContainer","CRow","CCol","md","xl","CCard","CCardHeader","CCardBody","CImage","src","alt","transition","width","height","onMouseOver","e","target","transform","onMouseOut","email","phoneno","dob","position","user_id","createdAt","CCardFooter","CForm","onSubmit","CFormInput","type","required","invalid","CFormFeedback","Employeeattendance","Employeeleave"],"sourceRoot":""}