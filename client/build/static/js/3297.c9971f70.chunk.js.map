{"version":3,"file":"static/js/3297.c9971f70.chunk.js","mappings":"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","sources":["views/user/User.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/DeleteRounded.js","../node_modules/@mui/icons-material/esm/EditRounded.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport * as Icons from '@mui/icons-material'\nimport swal from 'sweetalert'\nimport Cookies from 'js-cookie'\nimport { CSpinner } from '@coreui/react'\nimport { Button, IconButton } from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MUIDataTable from 'mui-datatables'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { deleteAdmin, deleteMultiAdmin, getAllAdmins, getrole } from 'src/redux/api/api'\n\nconst User = () => {\n  const [dataTableData, setDataTabledata] = useState([])\n  const [baseUrl, setBaseUrl] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const auth = useSelector((state) => state.auth)\n  const [permission, setPermissions] = useState([])\n\n  const getUsers = async () => {\n    setIsLoading(true)\n    try {\n      const res = await getAllAdmins()\n      const data = res.data.info\n      setDataTabledata(data)\n      setBaseUrl(res.data.baseUrl)\n    } catch (error) {\n      console.log(error)\n      toast.error(error.response?.data?.message || 'An error occurred')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const fetchPermissions = async () => {\n      await getrole(dispatch)\n      setPermissions(auth.permission)\n    }\n    fetchPermissions()\n  }, [])\n\n  useEffect(() => {\n    getUsers()\n  }, [])\n  const columns = [\n    {\n      name: 'name',\n      label: 'Name',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'email',\n      label: 'Email',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'role_name',\n      label: 'Role',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'image',\n      label: 'Image',\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (image) =>\n          image && (\n            <img\n              src={`${baseUrl}${image}`}\n              alt={image}\n              style={{ height: '60px', width: '60px', borderRadius: '50%' }}\n            />\n          ),\n      },\n    },\n  ]\n\n  if (\n    (Array.isArray(permission) && permission.includes('admin.delete')) ||\n    permission.includes('admin.edit')\n  ) {\n    columns.push({\n      name: '_id',\n      label: 'Action',\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          return (\n            <>\n              {Array.isArray(permission) && permission.includes('admin.edit') && (\n                <Icons.EditRounded\n                  className=\"editButton\"\n                  onClick={() => {\n                    const editData = dataTableData.find((data) => data._id === value)\n                    navigate('/userform', {\n                      state: { editData: editData, imageUrl: baseUrl },\n                    })\n                  }}\n                ></Icons.EditRounded>\n              )}\n              {Array.isArray(permission) && permission.includes('admin.delete') && (\n                <Icons.DeleteRounded\n                  className=\"deleteButton\"\n                  onClick={async () => {\n                    const confirm = await swal({\n                      title: 'Are you sure?',\n                      text: 'Are you sure? Want to delete employee?',\n                      icon: 'warning',\n                      buttons: ['No, cancel it!', 'Yes, I am sure!'],\n                      dangerMode: true,\n                    })\n                    if (confirm) {\n                      deleteAdmin(value)\n                        .then(() => {\n                          getUsers()\n                          toast.success('Deleted successfully!')\n                          swal({\n                            title: 'Deleted successfully!',\n                            icon: 'success',\n                            button: 'close',\n                          })\n                        })\n                        .catch((error) => {\n                          console.log(error)\n                          const errorMsg = error.response?.data?.message || 'Something went wrong'\n                          toast.error(errorMsg)\n                        })\n                    }\n                  }}\n                />\n              )}\n            </>\n          )\n        },\n      },\n    })\n  }\n\n  const deleteMultiple = async (selectedRows) => {\n    const ids = selectedRows.data.map((row) => dataTableData[row.dataIndex]._id)\n    const confirm = await swal({\n      title: 'Are you sure?',\n      text: 'Are you sure that you want to delete selected User?',\n      icon: 'warning',\n      buttons: ['No, cancel it!', 'Yes, I am sure!'],\n      dangerMode: true,\n    })\n\n    if (confirm) {\n      // console.log(ids)\n      const data = {\n        ids: ids,\n      }\n      deleteMultiAdmin(data)\n        .then(() => {\n          getUsers()\n          toast.success('Deleted successfully!', {\n            key: ids.join(','),\n          })\n        })\n        .catch((error) => {\n          toast.error(error.response?.data?.message || 'Something went wrong')\n        })\n    }\n  }\n\n  const SelectedRowsToolbar = ({ selectedRows }) => {\n    return (\n      <div>\n        <IconButton onClick={() => deleteMultiple(selectedRows)}>\n          <Icons.Delete />\n        </IconButton>\n      </div>\n    )\n  }\n\n  const options = {\n    customToolbarSelect: (selectedRows) =>\n      Array.isArray(permission) &&\n      permission.includes('admin.delete') && <SelectedRowsToolbar selectedRows={selectedRows} />,\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"d-flex justify-content-center\">\n          <CSpinner className=\"theme-spinner-color\" />\n        </div>\n      ) : (\n        <>\n          <ToastContainer />\n          {Array.isArray(permission) && permission.includes('admin.add') && (\n            <div className=\"right-text\">\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                className=\"AddButton\"\n                onClick={() => navigate('/userform')}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n          <MUIDataTable title={'User'} data={dataTableData} columns={columns} options={options} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default User\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1\"\n}), 'DeleteRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'EditRounded');"],"names":["User","dataTableData","setDataTabledata","useState","baseUrl","setBaseUrl","isLoading","setIsLoading","navigate","useNavigate","dispatch","useDispatch","auth","useSelector","state","permission","setPermissions","getUsers","async","res","getAllAdmins","data","info","error","_error$response","_error$response$data","console","log","toast","response","message","useEffect","getrole","fetchPermissions","columns","name","label","options","filter","sort","customBodyRender","image","_jsx","src","concat","alt","style","height","width","borderRadius","Array","isArray","includes","push","value","_jsxs","_Fragment","children","Icons","className","onClick","editData","find","_id","imageUrl","swal","title","text","icon","buttons","dangerMode","deleteAdmin","then","success","button","catch","_error$response2","_error$response2$data","errorMsg","SelectedRowsToolbar","_ref","selectedRows","IconButton","ids","map","row","dataIndex","deleteMultiAdmin","key","join","_error$response3","_error$response3$data","deleteMultiple","customToolbarSelect","CSpinner","ToastContainer","Button","variant","size","MUIDataTable","createSvgIcon","d"],"sourceRoot":""}